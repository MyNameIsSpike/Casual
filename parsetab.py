
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLTGTLEGEORANDEQNEQleftPLUSMINUSleftTIMESDIVIDEMODrightNOTAND BOOLEAN BOOLEAN_LITERAL COLON COMMA DECL DEF DIVIDE ELSE EQ EQUALS FLOAT FLOAT_LITERAL GE GT ID IF INT INT_LITERAL LBRACE LBRACKET LE LPAREN LT MINUS MOD NEQ NOT OR PLUS RBRACE RBRACKET RETURN RPAREN SEMI STRING STRING_LITERAL TIMES VOID WHILEprogram : declaration program\n                | definition program\n                | emptydeclaration : DECL ID LPAREN function_args RPAREN COLON return_typedefinition : DEF ID LPAREN function_args RPAREN COLON return_type blockfunction_args : ID COLON var_type function_args\n                    | COMMA function_args\n                    | emptyreturn_type : INT\n                    | FLOAT\n                    | STRING\n                    | BOOLEAN\n                    | VOID\n                    | LBRACKET var_type RBRACKETblock : LBRACE recursive_statement RBRACErecursive_statement : statement recursive_statement\n                            | emptystatement : return_statement\n            | expression SEMI\n            | if_statement\n            | while_statement\n            | variable_declaration\n            | variable_assignmentreturn_statement : RETURN ret_value SEMIret_value : expression\n                | emptyif_statement : IF expression block else_statementelse_statement : ELSE block\n                | emptywhile_statement : WHILE expression blockvariable_declaration : ID COLON var_type EQUALS expression SEMIvariable_assignment : ID EQUALS expression SEMIvar_type : FLOAT\n                | INT\n                | STRING\n                | BOOLEAN\n                | LBRACKET var_type RBRACKETexpression : expression_binary_operation\n                    | expression_variable\n                    | expression_unary_operation\n                    | expression_literal\n                    | function_invocation\n                    | index_accessexpression_binary_operation : expression PLUS expression\n                                | expression MINUS expression\n                                | expression TIMES expression\n                                | expression DIVIDE expression\n                                | expression MOD expression\n                                | expression AND expression\n                                | expression OR expression\n                                | expression LT expression\n                                | expression GT expression\n                                | expression LE expression\n                                | expression GE expression\n                                | expression EQ expression\n                                | expression NEQ expressionexpression_variable : IDexpression_unary_operation : NOT expressionexpression_literal : LBRACE array_literal RBRACE\n                | INT_LITERAL\n                | FLOAT_LITERAL\n                | STRING_LITERAL\n                | BOOLEAN_LITERALarray_literal : expression array_literal\n                    | COMMA array_literal\n                    | emptyfunction_invocation : ID LPAREN func_invocation_args RPARENfunc_invocation_args : expression func_invocation_args\n                            | COMMA func_invocation_args\n                            | emptyindex_access : ID index_access_auxindex_access_aux : LBRACKET expression RBRACKET\n                        | LPAREN func_invocation_args RPAREN LBRACKET expression RBRACKETempty : '
    
_lr_action_items = {'DECL':([0,2,3,32,33,34,35,36,37,42,44,75,],[5,5,5,-4,-9,-10,-11,-12,-13,-5,-14,-15,]),'DEF':([0,2,3,32,33,34,35,36,37,42,44,75,],[6,6,6,-4,-9,-10,-11,-12,-13,-5,-14,-15,]),'$end':([0,1,2,3,4,7,8,32,33,34,35,36,37,42,44,75,],[-74,0,-74,-74,-3,-1,-2,-4,-9,-10,-11,-12,-13,-5,-14,-15,]),'ID':([5,6,11,12,15,22,23,24,25,26,40,43,45,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,71,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,128,130,131,132,133,136,137,139,140,142,],[9,10,13,13,13,13,-33,-34,-35,-36,-37,64,74,64,-18,-20,-21,-22,-23,74,-38,-39,-40,-41,-42,-43,74,74,74,-60,-61,-62,-63,74,74,-57,-15,-19,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-71,74,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-24,-74,-30,74,74,-27,-29,74,-32,-67,-72,-28,74,-31,-73,]),'LPAREN':([9,10,64,74,],[11,12,98,98,]),'COMMA':([11,12,15,22,23,24,25,26,40,45,56,57,58,59,60,61,66,67,68,69,71,72,74,98,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,124,125,133,136,142,],[15,15,15,15,-33,-34,-35,-36,-37,72,-38,-39,-40,-41,-42,-43,-60,-61,-62,-63,72,72,-57,125,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,125,125,-67,-72,-73,]),'RPAREN':([11,12,14,15,16,17,20,22,23,24,25,26,30,40,56,57,58,59,60,61,66,67,68,69,74,98,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,123,124,125,126,133,134,135,136,142,],[-74,-74,19,-74,-8,21,-7,-74,-33,-34,-35,-36,-6,-37,-38,-39,-40,-41,-42,-43,-60,-61,-62,-63,-57,-74,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,133,-74,-74,-70,-67,-68,-69,-72,-73,]),'COLON':([13,19,21,64,],[18,28,29,96,]),'FLOAT':([18,27,28,29,38,96,],[23,23,34,34,23,23,]),'INT':([18,27,28,29,38,96,],[24,24,33,33,24,24,]),'STRING':([18,27,28,29,38,96,],[25,25,35,35,25,25,]),'BOOLEAN':([18,27,28,29,38,96,],[26,26,36,36,26,26,]),'LBRACKET':([18,27,28,29,38,64,74,96,133,],[27,27,38,38,27,100,100,27,139,]),'RBRACKET':([23,24,25,26,31,40,41,56,57,58,59,60,61,66,67,68,69,74,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,127,133,136,141,142,],[-33,-34,-35,-36,40,-37,44,-38,-39,-40,-41,-42,-43,-60,-61,-62,-63,-57,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,136,-67,-72,142,-73,]),'EQUALS':([23,24,25,26,40,64,121,],[-33,-34,-35,-36,-37,97,131,]),'VOID':([28,29,],[37,37,]),'LBRACE':([33,34,35,36,37,39,43,44,45,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,71,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,128,129,130,131,132,133,136,137,139,140,142,],[-9,-10,-11,-12,-13,43,45,-14,45,45,-18,-20,-21,-22,-23,45,-38,-39,-40,-41,-42,-43,45,45,45,-60,-61,-62,-63,45,45,-57,-15,-19,45,45,45,45,45,45,45,45,45,45,45,45,45,43,43,45,45,-71,45,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-24,-74,-30,45,45,-27,43,-29,45,-32,-67,-72,-28,45,-31,-73,]),'RBRACE':([43,45,46,47,48,49,51,52,53,54,56,57,58,59,60,61,66,67,68,69,70,71,72,73,74,75,76,77,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,128,130,132,133,136,137,140,142,],[-74,-74,75,-74,-17,-18,-20,-21,-22,-23,-38,-39,-40,-41,-42,-43,-60,-61,-62,-63,102,-74,-74,-66,-57,-15,-16,-19,-71,-58,-59,-64,-65,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-24,-74,-30,-27,-29,-32,-67,-72,-28,-31,-73,]),'RETURN':([43,47,49,51,52,53,54,75,77,118,119,120,128,130,132,137,140,],[55,55,-18,-20,-21,-22,-23,-15,-19,-24,-74,-30,-27,-29,-32,-28,-31,]),'IF':([43,47,49,51,52,53,54,75,77,118,119,120,128,130,132,137,140,],[62,62,-18,-20,-21,-22,-23,-15,-19,-24,-74,-30,-27,-29,-32,-28,-31,]),'WHILE':([43,47,49,51,52,53,54,75,77,118,119,120,128,130,132,137,140,],[63,63,-18,-20,-21,-22,-23,-15,-19,-24,-74,-30,-27,-29,-32,-28,-31,]),'NOT':([43,45,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,71,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,128,130,131,132,133,136,137,139,140,142,],[65,65,65,-18,-20,-21,-22,-23,65,-38,-39,-40,-41,-42,-43,65,65,65,-60,-61,-62,-63,65,65,-57,-15,-19,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-71,65,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-24,-74,-30,65,65,-27,-29,65,-32,-67,-72,-28,65,-31,-73,]),'INT_LITERAL':([43,45,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,71,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,128,130,131,132,133,136,137,139,140,142,],[66,66,66,-18,-20,-21,-22,-23,66,-38,-39,-40,-41,-42,-43,66,66,66,-60,-61,-62,-63,66,66,-57,-15,-19,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-71,66,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-24,-74,-30,66,66,-27,-29,66,-32,-67,-72,-28,66,-31,-73,]),'FLOAT_LITERAL':([43,45,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,71,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,128,130,131,132,133,136,137,139,140,142,],[67,67,67,-18,-20,-21,-22,-23,67,-38,-39,-40,-41,-42,-43,67,67,67,-60,-61,-62,-63,67,67,-57,-15,-19,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-71,67,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-24,-74,-30,67,67,-27,-29,67,-32,-67,-72,-28,67,-31,-73,]),'STRING_LITERAL':([43,45,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,71,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,128,130,131,132,133,136,137,139,140,142,],[68,68,68,-18,-20,-21,-22,-23,68,-38,-39,-40,-41,-42,-43,68,68,68,-60,-61,-62,-63,68,68,-57,-15,-19,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-71,68,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-24,-74,-30,68,68,-27,-29,68,-32,-67,-72,-28,68,-31,-73,]),'BOOLEAN_LITERAL':([43,45,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,71,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,128,130,131,132,133,136,137,139,140,142,],[69,69,69,-18,-20,-21,-22,-23,69,-38,-39,-40,-41,-42,-43,69,69,69,-60,-61,-62,-63,69,69,-57,-15,-19,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-71,69,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-24,-74,-30,69,69,-27,-29,69,-32,-67,-72,-28,69,-31,-73,]),'SEMI':([50,55,56,57,58,59,60,61,64,66,67,68,69,74,91,92,93,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,133,136,138,142,],[77,-74,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,-57,118,-25,-26,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,132,-67,-72,140,-73,]),'PLUS':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[78,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,78,-57,78,78,78,-71,-58,-59,-44,-45,-46,-47,-48,78,78,78,78,78,78,78,78,78,78,78,-67,-72,78,78,-73,]),'MINUS':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[79,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,79,-57,79,79,79,-71,-58,-59,-44,-45,-46,-47,-48,79,79,79,79,79,79,79,79,79,79,79,-67,-72,79,79,-73,]),'TIMES':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[80,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,80,-57,80,80,80,-71,-58,-59,80,80,-46,-47,-48,80,80,80,80,80,80,80,80,80,80,80,-67,-72,80,80,-73,]),'DIVIDE':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[81,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,81,-57,81,81,81,-71,-58,-59,81,81,-46,-47,-48,81,81,81,81,81,81,81,81,81,81,81,-67,-72,81,81,-73,]),'MOD':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[82,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,82,-57,82,82,82,-71,-58,-59,82,82,-46,-47,-48,82,82,82,82,82,82,82,82,82,82,82,-67,-72,82,82,-73,]),'AND':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[83,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,83,-57,83,83,83,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,83,83,83,-67,-72,83,83,-73,]),'OR':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[84,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,84,-57,84,84,84,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,84,84,84,-67,-72,84,84,-73,]),'LT':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[85,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,85,-57,85,85,85,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,85,85,85,-67,-72,85,85,-73,]),'GT':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[86,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,86,-57,86,86,86,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,86,86,86,-67,-72,86,86,-73,]),'LE':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[87,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,87,-57,87,87,87,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,87,87,87,-67,-72,87,87,-73,]),'GE':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[88,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,88,-57,88,88,88,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,88,88,88,-67,-72,88,88,-73,]),'EQ':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[89,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,89,-57,89,89,89,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,89,89,89,-67,-72,89,89,-73,]),'NEQ':([50,56,57,58,59,60,61,64,66,67,68,69,71,74,92,94,95,99,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,133,136,138,141,142,],[90,-38,-39,-40,-41,-42,-43,-57,-60,-61,-62,-63,90,-57,90,90,90,-71,-58,-59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,90,90,90,-67,-72,90,90,-73,]),'ELSE':([75,119,],[-15,129,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,],[1,7,8,]),'declaration':([0,2,3,],[2,2,2,]),'definition':([0,2,3,],[3,3,3,]),'empty':([0,2,3,11,12,15,22,43,45,47,55,71,72,98,119,124,125,],[4,4,4,16,16,16,16,48,73,48,93,73,73,126,130,126,126,]),'function_args':([11,12,15,22,],[14,17,20,30,]),'var_type':([18,27,38,96,],[22,31,41,121,]),'return_type':([28,29,],[32,39,]),'block':([39,94,95,129,],[42,119,120,137,]),'recursive_statement':([43,47,],[46,76,]),'statement':([43,47,],[47,47,]),'return_statement':([43,47,],[49,49,]),'expression':([43,45,47,55,62,63,65,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,100,124,125,131,139,],[50,71,50,92,94,95,101,71,71,105,106,107,108,109,110,111,112,113,114,115,116,117,122,124,127,124,124,138,141,]),'if_statement':([43,47,],[51,51,]),'while_statement':([43,47,],[52,52,]),'variable_declaration':([43,47,],[53,53,]),'variable_assignment':([43,47,],[54,54,]),'expression_binary_operation':([43,45,47,55,62,63,65,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,100,124,125,131,139,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'expression_variable':([43,45,47,55,62,63,65,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,100,124,125,131,139,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'expression_unary_operation':([43,45,47,55,62,63,65,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,100,124,125,131,139,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'expression_literal':([43,45,47,55,62,63,65,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,100,124,125,131,139,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'function_invocation':([43,45,47,55,62,63,65,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,100,124,125,131,139,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'index_access':([43,45,47,55,62,63,65,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,100,124,125,131,139,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'array_literal':([45,71,72,],[70,103,104,]),'ret_value':([55,],[91,]),'index_access_aux':([64,74,],[99,99,]),'func_invocation_args':([98,124,125,],[123,134,135,]),'else_statement':([119,],[128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration program','program',2,'p_program','parser.py',25),
  ('program -> definition program','program',2,'p_program','parser.py',26),
  ('program -> empty','program',1,'p_program','parser.py',27),
  ('declaration -> DECL ID LPAREN function_args RPAREN COLON return_type','declaration',7,'p_declaration','parser.py',35),
  ('definition -> DEF ID LPAREN function_args RPAREN COLON return_type block','definition',8,'p_definition','parser.py',40),
  ('function_args -> ID COLON var_type function_args','function_args',4,'p_function_args','parser.py',45),
  ('function_args -> COMMA function_args','function_args',2,'p_function_args','parser.py',46),
  ('function_args -> empty','function_args',1,'p_function_args','parser.py',47),
  ('return_type -> INT','return_type',1,'p_return_type','parser.py',61),
  ('return_type -> FLOAT','return_type',1,'p_return_type','parser.py',62),
  ('return_type -> STRING','return_type',1,'p_return_type','parser.py',63),
  ('return_type -> BOOLEAN','return_type',1,'p_return_type','parser.py',64),
  ('return_type -> VOID','return_type',1,'p_return_type','parser.py',65),
  ('return_type -> LBRACKET var_type RBRACKET','return_type',3,'p_return_type','parser.py',66),
  ('block -> LBRACE recursive_statement RBRACE','block',3,'p_block','parser.py',74),
  ('recursive_statement -> statement recursive_statement','recursive_statement',2,'p_recursive_statement','parser.py',79),
  ('recursive_statement -> empty','recursive_statement',1,'p_recursive_statement','parser.py',80),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',88),
  ('statement -> expression SEMI','statement',2,'p_statement','parser.py',89),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',90),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',91),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',92),
  ('statement -> variable_assignment','statement',1,'p_statement','parser.py',93),
  ('return_statement -> RETURN ret_value SEMI','return_statement',3,'p_return_statement','parser.py',98),
  ('ret_value -> expression','ret_value',1,'p_ret_value','parser.py',103),
  ('ret_value -> empty','ret_value',1,'p_ret_value','parser.py',104),
  ('if_statement -> IF expression block else_statement','if_statement',4,'p_if_statement','parser.py',110),
  ('else_statement -> ELSE block','else_statement',2,'p_else_statement','parser.py',115),
  ('else_statement -> empty','else_statement',1,'p_else_statement','parser.py',116),
  ('while_statement -> WHILE expression block','while_statement',3,'p_while_stmt','parser.py',124),
  ('variable_declaration -> ID COLON var_type EQUALS expression SEMI','variable_declaration',6,'p_variable_declaration','parser.py',129),
  ('variable_assignment -> ID EQUALS expression SEMI','variable_assignment',4,'p_variable_assignment','parser.py',134),
  ('var_type -> FLOAT','var_type',1,'p_var_type','parser.py',139),
  ('var_type -> INT','var_type',1,'p_var_type','parser.py',140),
  ('var_type -> STRING','var_type',1,'p_var_type','parser.py',141),
  ('var_type -> BOOLEAN','var_type',1,'p_var_type','parser.py',142),
  ('var_type -> LBRACKET var_type RBRACKET','var_type',3,'p_var_type','parser.py',143),
  ('expression -> expression_binary_operation','expression',1,'p_expression','parser.py',151),
  ('expression -> expression_variable','expression',1,'p_expression','parser.py',152),
  ('expression -> expression_unary_operation','expression',1,'p_expression','parser.py',153),
  ('expression -> expression_literal','expression',1,'p_expression','parser.py',154),
  ('expression -> function_invocation','expression',1,'p_expression','parser.py',155),
  ('expression -> index_access','expression',1,'p_expression','parser.py',156),
  ('expression_binary_operation -> expression PLUS expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',161),
  ('expression_binary_operation -> expression MINUS expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',162),
  ('expression_binary_operation -> expression TIMES expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',163),
  ('expression_binary_operation -> expression DIVIDE expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',164),
  ('expression_binary_operation -> expression MOD expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',165),
  ('expression_binary_operation -> expression AND expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',166),
  ('expression_binary_operation -> expression OR expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',167),
  ('expression_binary_operation -> expression LT expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',168),
  ('expression_binary_operation -> expression GT expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',169),
  ('expression_binary_operation -> expression LE expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',170),
  ('expression_binary_operation -> expression GE expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',171),
  ('expression_binary_operation -> expression EQ expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',172),
  ('expression_binary_operation -> expression NEQ expression','expression_binary_operation',3,'p_expression_binary_operation','parser.py',173),
  ('expression_variable -> ID','expression_variable',1,'p_expression_variable','parser.py',178),
  ('expression_unary_operation -> NOT expression','expression_unary_operation',2,'p_expression_unary_operation','parser.py',183),
  ('expression_literal -> LBRACE array_literal RBRACE','expression_literal',3,'p_expression_literal','parser.py',188),
  ('expression_literal -> INT_LITERAL','expression_literal',1,'p_expression_literal','parser.py',189),
  ('expression_literal -> FLOAT_LITERAL','expression_literal',1,'p_expression_literal','parser.py',190),
  ('expression_literal -> STRING_LITERAL','expression_literal',1,'p_expression_literal','parser.py',191),
  ('expression_literal -> BOOLEAN_LITERAL','expression_literal',1,'p_expression_literal','parser.py',192),
  ('array_literal -> expression array_literal','array_literal',2,'p_array_literal','parser.py',206),
  ('array_literal -> COMMA array_literal','array_literal',2,'p_array_literal','parser.py',207),
  ('array_literal -> empty','array_literal',1,'p_array_literal','parser.py',208),
  ('function_invocation -> ID LPAREN func_invocation_args RPAREN','function_invocation',4,'p_function_invocation','parser.py',221),
  ('func_invocation_args -> expression func_invocation_args','func_invocation_args',2,'p_func_invocation_args','parser.py',226),
  ('func_invocation_args -> COMMA func_invocation_args','func_invocation_args',2,'p_func_invocation_args','parser.py',227),
  ('func_invocation_args -> empty','func_invocation_args',1,'p_func_invocation_args','parser.py',228),
  ('index_access -> ID index_access_aux','index_access',2,'p_index_access','parser.py',241),
  ('index_access_aux -> LBRACKET expression RBRACKET','index_access_aux',3,'p_index_access_aux','parser.py',246),
  ('index_access_aux -> LPAREN func_invocation_args RPAREN LBRACKET expression RBRACKET','index_access_aux',6,'p_index_access_aux','parser.py',247),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',255),
]
